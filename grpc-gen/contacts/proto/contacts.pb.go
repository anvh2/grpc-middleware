// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/contacts.proto

/*
Package contacts is a generated protocol buffer package.

It is generated from these files:
	proto/contacts.proto

It has these top-level messages:
	Contact
	Request
	Response
	ValidateResponse
	GetContactRequest
	GetContactResponse
*/
package contacts

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_INVALID Status = 0
	Status_VALID   Status = 1
)

var Status_name = map[int32]string{
	0: "INVALID",
	1: "VALID",
}
var Status_value = map[string]int32{
	"INVALID": 0,
	"VALID":   1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Contact struct {
	// User id
	UserID string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Phone  string `protobuf:"bytes,3,opt,name=phone" json:"phone,omitempty"`
	Status Status `protobuf:"varint,4,opt,name=status,enum=contacts.Status" json:"status,omitempty"`
}

func (m *Contact) Reset()                    { *m = Contact{} }
func (m *Contact) String() string            { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()               {}
func (*Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Contact) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Contact) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Contact) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_INVALID
}

type Request struct {
	Contact *Contact `protobuf:"bytes,1,opt,name=contact" json:"contact,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

type Response struct {
	ErrorCode   int64  `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
	MessageCode string `protobuf:"bytes,2,opt,name=messageCode" json:"messageCode,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *Response) GetMessageCode() string {
	if m != nil {
		return m.MessageCode
	}
	return ""
}

type ValidateResponse struct {
	ErrorCode   int64  `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
	MessageCode string `protobuf:"bytes,2,opt,name=messageCode" json:"messageCode,omitempty"`
	Status      Status `protobuf:"varint,3,opt,name=status,enum=contacts.Status" json:"status,omitempty"`
}

func (m *ValidateResponse) Reset()                    { *m = ValidateResponse{} }
func (m *ValidateResponse) String() string            { return proto.CompactTextString(m) }
func (*ValidateResponse) ProtoMessage()               {}
func (*ValidateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ValidateResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *ValidateResponse) GetMessageCode() string {
	if m != nil {
		return m.MessageCode
	}
	return ""
}

func (m *ValidateResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_INVALID
}

type GetContactRequest struct {
	// user id
	UserID string `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
}

func (m *GetContactRequest) Reset()                    { *m = GetContactRequest{} }
func (m *GetContactRequest) String() string            { return proto.CompactTextString(m) }
func (*GetContactRequest) ProtoMessage()               {}
func (*GetContactRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetContactRequest) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

type GetContactResponse struct {
	ErrorCode   int64    `protobuf:"varint,1,opt,name=errorCode" json:"errorCode,omitempty"`
	MessageCode string   `protobuf:"bytes,2,opt,name=messageCode" json:"messageCode,omitempty"`
	Contact     *Contact `protobuf:"bytes,3,opt,name=contact" json:"contact,omitempty"`
}

func (m *GetContactResponse) Reset()                    { *m = GetContactResponse{} }
func (m *GetContactResponse) String() string            { return proto.CompactTextString(m) }
func (*GetContactResponse) ProtoMessage()               {}
func (*GetContactResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetContactResponse) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *GetContactResponse) GetMessageCode() string {
	if m != nil {
		return m.MessageCode
	}
	return ""
}

func (m *GetContactResponse) GetContact() *Contact {
	if m != nil {
		return m.Contact
	}
	return nil
}

func init() {
	proto.RegisterType((*Contact)(nil), "contacts.Contact")
	proto.RegisterType((*Request)(nil), "contacts.Request")
	proto.RegisterType((*Response)(nil), "contacts.Response")
	proto.RegisterType((*ValidateResponse)(nil), "contacts.ValidateResponse")
	proto.RegisterType((*GetContactRequest)(nil), "contacts.GetContactRequest")
	proto.RegisterType((*GetContactResponse)(nil), "contacts.GetContactResponse")
	proto.RegisterEnum("contacts.Status", Status_name, Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ContactsService service

type ContactsServiceClient interface {
	// validate contac
	Validate(ctx context.Context, in *Request, opts ...grpc.CallOption) (*ValidateResponse, error)
	// create contact
	Create(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	// get only one contact
	GetContact(ctx context.Context, in *GetContactRequest, opts ...grpc.CallOption) (*GetContactResponse, error)
}

type contactsServiceClient struct {
	cc *grpc.ClientConn
}

func NewContactsServiceClient(cc *grpc.ClientConn) ContactsServiceClient {
	return &contactsServiceClient{cc}
}

func (c *contactsServiceClient) Validate(ctx context.Context, in *Request, opts ...grpc.CallOption) (*ValidateResponse, error) {
	out := new(ValidateResponse)
	err := grpc.Invoke(ctx, "/contacts.ContactsService/Validate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsServiceClient) Create(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/contacts.ContactsService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactsServiceClient) GetContact(ctx context.Context, in *GetContactRequest, opts ...grpc.CallOption) (*GetContactResponse, error) {
	out := new(GetContactResponse)
	err := grpc.Invoke(ctx, "/contacts.ContactsService/GetContact", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ContactsService service

type ContactsServiceServer interface {
	// validate contac
	Validate(context.Context, *Request) (*ValidateResponse, error)
	// create contact
	Create(context.Context, *Request) (*Response, error)
	// get only one contact
	GetContact(context.Context, *GetContactRequest) (*GetContactResponse, error)
}

func RegisterContactsServiceServer(s *grpc.Server, srv ContactsServiceServer) {
	s.RegisterService(&_ContactsService_serviceDesc, srv)
}

func _ContactsService_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServiceServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contacts.ContactsService/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServiceServer).Validate(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contacts.ContactsService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServiceServer).Create(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactsService_GetContact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactsServiceServer).GetContact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contacts.ContactsService/GetContact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactsServiceServer).GetContact(ctx, req.(*GetContactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contacts.ContactsService",
	HandlerType: (*ContactsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Validate",
			Handler:    _ContactsService_Validate_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _ContactsService_Create_Handler,
		},
		{
			MethodName: "GetContact",
			Handler:    _ContactsService_GetContact_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/contacts.proto",
}

func init() { proto.RegisterFile("proto/contacts.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xc1, 0x6a, 0xc2, 0x40,
	0x10, 0x6d, 0x1a, 0x4d, 0x74, 0x84, 0x56, 0x07, 0x29, 0xc1, 0x7a, 0x08, 0x39, 0x49, 0x05, 0x05,
	0x0b, 0x85, 0x1e, 0x8b, 0x82, 0x58, 0x4a, 0x0f, 0x11, 0xbc, 0x6f, 0x75, 0x68, 0x85, 0x9a, 0x4d,
	0x77, 0x37, 0x3d, 0xf5, 0xd2, 0x9f, 0xeb, 0x77, 0x15, 0x76, 0x37, 0xcd, 0x82, 0x15, 0x2f, 0xde,
	0x66, 0xde, 0xbc, 0x37, 0x3b, 0xf3, 0x86, 0x85, 0x6e, 0x2e, 0xb8, 0xe2, 0xe3, 0x35, 0xcf, 0x14,
	0x5b, 0x2b, 0x39, 0xd2, 0x29, 0x36, 0xca, 0x3c, 0x29, 0x20, 0x9c, 0x9a, 0x18, 0xaf, 0x20, 0x28,
	0x24, 0x89, 0xc5, 0x2c, 0xf2, 0x62, 0x6f, 0xd0, 0x4c, 0x6d, 0x86, 0x08, 0xb5, 0x8c, 0xed, 0x28,
	0x3a, 0xd7, 0xa8, 0x8e, 0xb1, 0x0b, 0xf5, 0xfc, 0x8d, 0x67, 0x14, 0xf9, 0x1a, 0x34, 0x09, 0x0e,
	0x20, 0x90, 0x8a, 0xa9, 0x42, 0x46, 0xb5, 0xd8, 0x1b, 0x5c, 0x4c, 0xda, 0xa3, 0xbf, 0x77, 0x97,
	0x1a, 0x4f, 0x6d, 0x3d, 0xb9, 0x83, 0x30, 0xa5, 0x8f, 0x82, 0xa4, 0xc2, 0x21, 0x84, 0x96, 0xa5,
	0xdf, 0x6d, 0x4d, 0x3a, 0x95, 0xca, 0x8e, 0x96, 0x96, 0x8c, 0xe4, 0x11, 0x1a, 0x29, 0xc9, 0x9c,
	0x67, 0x92, 0xb0, 0x0f, 0x4d, 0x12, 0x82, 0x8b, 0x29, 0xdf, 0x90, 0x96, 0xfa, 0x69, 0x05, 0x60,
	0x0c, 0xad, 0x1d, 0x49, 0xc9, 0x5e, 0x49, 0xd7, 0xcd, 0xf0, 0x2e, 0x94, 0x7c, 0x41, 0x7b, 0xc5,
	0xde, 0xb7, 0x1b, 0xa6, 0xe8, 0x54, 0x3d, 0x1d, 0x07, 0xfc, 0x23, 0x0e, 0x0c, 0xa1, 0x33, 0x27,
	0x55, 0x2e, 0x68, 0xbd, 0x38, 0x70, 0x82, 0xe4, 0xdb, 0x03, 0x74, 0xd9, 0x27, 0x9a, 0xd6, 0xb1,
	0xde, 0x3f, 0x66, 0xfd, 0x4d, 0x0c, 0x81, 0x59, 0x01, 0x5b, 0x10, 0x2e, 0x9e, 0x57, 0x0f, 0x4f,
	0x8b, 0x59, 0xfb, 0x0c, 0x9b, 0x50, 0x37, 0xa1, 0x37, 0xf9, 0xf1, 0xe0, 0xd2, 0xca, 0xe4, 0x92,
	0xc4, 0xe7, 0x76, 0x4d, 0x78, 0x0f, 0x8d, 0xd2, 0x64, 0x74, 0xba, 0xdb, 0x85, 0x7b, 0xbd, 0x0a,
	0xda, 0xbb, 0xc5, 0x18, 0x82, 0xa9, 0xa0, 0x03, 0x42, 0x74, 0x21, 0x2b, 0x98, 0x03, 0x54, 0x26,
	0xe1, 0x75, 0xc5, 0xd8, 0x33, 0xba, 0xd7, 0xff, 0xbf, 0x68, 0x1a, 0xbd, 0x04, 0xfa, 0x97, 0xdc,
	0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xba, 0x16, 0xd3, 0x8b, 0x3d, 0x03, 0x00, 0x00,
}
